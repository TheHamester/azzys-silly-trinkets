[manifest]
version = "1.0.0"
dump_lua = true
priority = 1

# Injecting a function to call each time a card is registered as scored during a blind
# Outside Loop
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = '''
    for i=1, #scoring_hand do
        --Highlight all the cards used in scoring and play a sound indicating highlight
        highlight_card(scoring_hand[i],(i-0.999)/5,'up')
'''
position = "before"
payload = '''
      local obj = G.GAME.blind.config.blind
      local continue_processing_scored_cards = true
'''
match_indent = true
# Inside Loop
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = '''
    for i=1, #scoring_hand do
        --Highlight all the cards used in scoring and play a sound indicating highlight
        highlight_card(scoring_hand[i],(i-0.999)/5,'up')
'''
position = "after"
payload = '''
        if type(obj.card_scored) == "function" and not G.GAME.blind.disabled and continue_processing_scored_cards then 
          continue_processing_scored_cards = obj:card_scored(scoring_hand[i]) 
        end
'''
match_indent = true
